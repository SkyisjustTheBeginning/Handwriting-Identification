# -*- coding: utf-8 -*-
"""MNIST-CNN-MODEL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mDZ4TqWddpDwIcfBuFWt9IccLqlA5I1r
"""

import mnist

train_images = mnist.train_images()
train_labels = mnist.train_labels()
test_images = mnist.test_images()
test_labels = mnist.test_labels()

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Dropout,Activation,Flatten , Conv2D , MaxPooling2D

train_images = train_images.reshape(-1,28,28,1)

model = Sequential()
model.add(Conv2D(64,(3,3),input_shape = train_images.shape[1:]))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size =( 2,2)))
model.add(Conv2D(64,(3,3),input_shape = train_images.shape[1:]))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size =( 2,2)))
model.add(Flatten())
model.add(Dense(64))
model.add(Dense(1))
model.add(Activation('softmax'))

model.compile(loss = "binary_crossentropy",optimizer="adam",metrics=["accuracy"])

model.fit(train_images,train_labels,epochs=100)
model.evaluate(test_images,test_labels)